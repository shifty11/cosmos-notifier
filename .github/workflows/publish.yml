name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push go Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: go/
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/cosmos-notifier-go:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push nodejs Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: nodejs/
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/cosmos-notifier-nodejs:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push envoy Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: webapp/
          file: webapp/envoy.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/cosmos-notifier-envoy:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push flutter Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: webapp/
          file: webapp/flutter.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/cosmos-notifier-webapp:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: CONFIG_FILE=lib/env.dart

      - name: Deploy to swarm
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ubuntu@188.166.38.235
          ssh_private_key: ${{ secrets.SWARMY_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.SWARMY_SSH_PUBLIC_KEY }}
          deployment_mode: docker-swarm
          copy_stack_file: true
          deploy_path: /home/ubuntu
          stack_file_name: swarm-prod-cosmos-notifier.yml
          keep_files: 5
          args: cosmos-notifier