// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: subscription_service.proto

package subscription_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatRoom_Type int32

const (
	ChatRoom_TELEGRAM ChatRoom_Type = 0
	ChatRoom_DISCORD  ChatRoom_Type = 1
)

// Enum value maps for ChatRoom_Type.
var (
	ChatRoom_Type_name = map[int32]string{
		0: "TELEGRAM",
		1: "DISCORD",
	}
	ChatRoom_Type_value = map[string]int32{
		"TELEGRAM": 0,
		"DISCORD":  1,
	}
)

func (x ChatRoom_Type) Enum() *ChatRoom_Type {
	p := new(ChatRoom_Type)
	*p = x
	return p
}

func (x ChatRoom_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatRoom_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_service_proto_enumTypes[0].Descriptor()
}

func (ChatRoom_Type) Type() protoreflect.EnumType {
	return &file_subscription_service_proto_enumTypes[0]
}

func (x ChatRoom_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatRoom_Type.Descriptor instead.
func (ChatRoom_Type) EnumDescriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{2, 0}
}

type AddDaoResponse_Status int32

const (
	AddDaoResponse_ADDED         AddDaoResponse_Status = 0
	AddDaoResponse_ALREADY_ADDED AddDaoResponse_Status = 1
	AddDaoResponse_IS_ADDING     AddDaoResponse_Status = 2
	AddDaoResponse_FAILED        AddDaoResponse_Status = 3
)

// Enum value maps for AddDaoResponse_Status.
var (
	AddDaoResponse_Status_name = map[int32]string{
		0: "ADDED",
		1: "ALREADY_ADDED",
		2: "IS_ADDING",
		3: "FAILED",
	}
	AddDaoResponse_Status_value = map[string]int32{
		"ADDED":         0,
		"ALREADY_ADDED": 1,
		"IS_ADDING":     2,
		"FAILED":        3,
	}
)

func (x AddDaoResponse_Status) Enum() *AddDaoResponse_Status {
	p := new(AddDaoResponse_Status)
	*p = x
	return p
}

func (x AddDaoResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddDaoResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_subscription_service_proto_enumTypes[1].Descriptor()
}

func (AddDaoResponse_Status) Type() protoreflect.EnumType {
	return &file_subscription_service_proto_enumTypes[1]
}

func (x AddDaoResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddDaoResponse_Status.Descriptor instead.
func (AddDaoResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{8, 0}
}

type SubscriptionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Telegram int32 `protobuf:"varint,2,opt,name=telegram,proto3" json:"telegram,omitempty"`
	Discord  int32 `protobuf:"varint,3,opt,name=discord,proto3" json:"discord,omitempty"`
}

func (x *SubscriptionStats) Reset() {
	*x = SubscriptionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionStats) ProtoMessage() {}

func (x *SubscriptionStats) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionStats.ProtoReflect.Descriptor instead.
func (*SubscriptionStats) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionStats) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubscriptionStats) GetTelegram() int32 {
	if x != nil {
		return x.Telegram
	}
	return 0
}

func (x *SubscriptionStats) GetDiscord() int32 {
	if x != nil {
		return x.Discord
	}
	return 0
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsSubscribed    bool               `protobuf:"varint,3,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	IsEnabled       bool               `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	ThumbnailUrl    string             `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	ContractAddress string             `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Stats           *SubscriptionStats `protobuf:"bytes,7,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{1}
}

func (x *Subscription) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Subscription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subscription) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *Subscription) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *Subscription) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Subscription) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Subscription) GetStats() *SubscriptionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TYPE          ChatRoom_Type   `protobuf:"varint,3,opt,name=TYPE,proto3,enum=cosmos_notifier_grpc.ChatRoom_Type" json:"TYPE,omitempty"`
	Subscriptions []*Subscription `protobuf:"bytes,4,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *ChatRoom) Reset() {
	*x = ChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoom) ProtoMessage() {}

func (x *ChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoom.ProtoReflect.Descriptor instead.
func (*ChatRoom) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRoom) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatRoom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatRoom) GetTYPE() ChatRoom_Type {
	if x != nil {
		return x.TYPE
	}
	return ChatRoom_TELEGRAM
}

func (x *ChatRoom) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type GetSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainChatRooms    []*ChatRoom `protobuf:"bytes,1,rep,name=chain_chat_rooms,json=chainChatRooms,proto3" json:"chain_chat_rooms,omitempty"`
	ContractChatRooms []*ChatRoom `protobuf:"bytes,2,rep,name=contract_chat_rooms,json=contractChatRooms,proto3" json:"contract_chat_rooms,omitempty"`
}

func (x *GetSubscriptionsResponse) Reset() {
	*x = GetSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsResponse) ProtoMessage() {}

func (x *GetSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubscriptionsResponse) GetChainChatRooms() []*ChatRoom {
	if x != nil {
		return x.ChainChatRooms
	}
	return nil
}

func (x *GetSubscriptionsResponse) GetContractChatRooms() []*ChatRoom {
	if x != nil {
		return x.ContractChatRooms
	}
	return nil
}

type ToggleChainSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomId int64 `protobuf:"varint,1,opt,name=chatRoomId,proto3" json:"chatRoomId,omitempty"`
	ChainId    int64 `protobuf:"varint,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
}

func (x *ToggleChainSubscriptionRequest) Reset() {
	*x = ToggleChainSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleChainSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleChainSubscriptionRequest) ProtoMessage() {}

func (x *ToggleChainSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleChainSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ToggleChainSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{4}
}

func (x *ToggleChainSubscriptionRequest) GetChatRoomId() int64 {
	if x != nil {
		return x.ChatRoomId
	}
	return 0
}

func (x *ToggleChainSubscriptionRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type ToggleContractSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatRoomId int64 `protobuf:"varint,1,opt,name=chatRoomId,proto3" json:"chatRoomId,omitempty"`
	ContractId int64 `protobuf:"varint,2,opt,name=contractId,proto3" json:"contractId,omitempty"`
}

func (x *ToggleContractSubscriptionRequest) Reset() {
	*x = ToggleContractSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleContractSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleContractSubscriptionRequest) ProtoMessage() {}

func (x *ToggleContractSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleContractSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ToggleContractSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{5}
}

func (x *ToggleContractSubscriptionRequest) GetChatRoomId() int64 {
	if x != nil {
		return x.ChatRoomId
	}
	return 0
}

func (x *ToggleContractSubscriptionRequest) GetContractId() int64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

type ToggleSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSubscribed bool `protobuf:"varint,1,opt,name=isSubscribed,proto3" json:"isSubscribed,omitempty"`
}

func (x *ToggleSubscriptionResponse) Reset() {
	*x = ToggleSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleSubscriptionResponse) ProtoMessage() {}

func (x *ToggleSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*ToggleSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{6}
}

func (x *ToggleSubscriptionResponse) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

type AddDaoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	CustomQuery     string `protobuf:"bytes,2,opt,name=customQuery,proto3" json:"customQuery,omitempty"`
}

func (x *AddDaoRequest) Reset() {
	*x = AddDaoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDaoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDaoRequest) ProtoMessage() {}

func (x *AddDaoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDaoRequest.ProtoReflect.Descriptor instead.
func (*AddDaoRequest) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{7}
}

func (x *AddDaoRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *AddDaoRequest) GetCustomQuery() string {
	if x != nil {
		return x.CustomQuery
	}
	return ""
}

type AddDaoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          AddDaoResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=cosmos_notifier_grpc.AddDaoResponse_Status" json:"status,omitempty"`
	Name            string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContractAddress string                `protobuf:"bytes,3,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *AddDaoResponse) Reset() {
	*x = AddDaoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDaoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDaoResponse) ProtoMessage() {}

func (x *AddDaoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDaoResponse.ProtoReflect.Descriptor instead.
func (*AddDaoResponse) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{8}
}

func (x *AddDaoResponse) GetStatus() AddDaoResponse_Status {
	if x != nil {
		return x.Status
	}
	return AddDaoResponse_ADDED
}

func (x *AddDaoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDaoResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type DeleteDaoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId int64 `protobuf:"varint,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
}

func (x *DeleteDaoRequest) Reset() {
	*x = DeleteDaoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDaoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDaoRequest) ProtoMessage() {}

func (x *DeleteDaoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDaoRequest.ProtoReflect.Descriptor instead.
func (*DeleteDaoRequest) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDaoRequest) GetContractId() int64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

type EnableChainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId   int64 `protobuf:"varint,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	IsEnabled bool  `protobuf:"varint,2,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
}

func (x *EnableChainRequest) Reset() {
	*x = EnableChainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_subscription_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableChainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableChainRequest) ProtoMessage() {}

func (x *EnableChainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableChainRequest.ProtoReflect.Descriptor instead.
func (*EnableChainRequest) Descriptor() ([]byte, []int) {
	return file_subscription_service_proto_rawDescGZIP(), []int{10}
}

func (x *EnableChainRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *EnableChainRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

var File_subscription_service_proto protoreflect.FileDescriptor

var file_subscription_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x5f, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x22, 0x85, 0x02, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x54, 0x59, 0x50,
	0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52, 0x41, 0x4d,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x22,
	0xb4, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x5a, 0x0a, 0x1e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x21, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1a, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x22, 0x5b, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0xd6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x41, 0x44, 0x44,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x32, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x12, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x32, 0x80, 0x05, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x17, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01,
	0x0a, 0x1a, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x06, 0x41, 0x64, 0x64,
	0x44, 0x61, 0x6f, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x4d, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12,
	0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x28, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x67, 0x6f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_subscription_service_proto_rawDescOnce sync.Once
	file_subscription_service_proto_rawDescData = file_subscription_service_proto_rawDesc
)

func file_subscription_service_proto_rawDescGZIP() []byte {
	file_subscription_service_proto_rawDescOnce.Do(func() {
		file_subscription_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_subscription_service_proto_rawDescData)
	})
	return file_subscription_service_proto_rawDescData
}

var file_subscription_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_subscription_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_subscription_service_proto_goTypes = []interface{}{
	(ChatRoom_Type)(0),                        // 0: cosmos_notifier_grpc.ChatRoom.Type
	(AddDaoResponse_Status)(0),                // 1: cosmos_notifier_grpc.AddDaoResponse.Status
	(*SubscriptionStats)(nil),                 // 2: cosmos_notifier_grpc.SubscriptionStats
	(*Subscription)(nil),                      // 3: cosmos_notifier_grpc.Subscription
	(*ChatRoom)(nil),                          // 4: cosmos_notifier_grpc.ChatRoom
	(*GetSubscriptionsResponse)(nil),          // 5: cosmos_notifier_grpc.GetSubscriptionsResponse
	(*ToggleChainSubscriptionRequest)(nil),    // 6: cosmos_notifier_grpc.ToggleChainSubscriptionRequest
	(*ToggleContractSubscriptionRequest)(nil), // 7: cosmos_notifier_grpc.ToggleContractSubscriptionRequest
	(*ToggleSubscriptionResponse)(nil),        // 8: cosmos_notifier_grpc.ToggleSubscriptionResponse
	(*AddDaoRequest)(nil),                     // 9: cosmos_notifier_grpc.AddDaoRequest
	(*AddDaoResponse)(nil),                    // 10: cosmos_notifier_grpc.AddDaoResponse
	(*DeleteDaoRequest)(nil),                  // 11: cosmos_notifier_grpc.DeleteDaoRequest
	(*EnableChainRequest)(nil),                // 12: cosmos_notifier_grpc.EnableChainRequest
	(*empty.Empty)(nil),                       // 13: google.protobuf.Empty
}
var file_subscription_service_proto_depIdxs = []int32{
	2,  // 0: cosmos_notifier_grpc.Subscription.stats:type_name -> cosmos_notifier_grpc.SubscriptionStats
	0,  // 1: cosmos_notifier_grpc.ChatRoom.TYPE:type_name -> cosmos_notifier_grpc.ChatRoom.Type
	3,  // 2: cosmos_notifier_grpc.ChatRoom.subscriptions:type_name -> cosmos_notifier_grpc.Subscription
	4,  // 3: cosmos_notifier_grpc.GetSubscriptionsResponse.chain_chat_rooms:type_name -> cosmos_notifier_grpc.ChatRoom
	4,  // 4: cosmos_notifier_grpc.GetSubscriptionsResponse.contract_chat_rooms:type_name -> cosmos_notifier_grpc.ChatRoom
	1,  // 5: cosmos_notifier_grpc.AddDaoResponse.status:type_name -> cosmos_notifier_grpc.AddDaoResponse.Status
	13, // 6: cosmos_notifier_grpc.SubscriptionService.GetSubscriptions:input_type -> google.protobuf.Empty
	6,  // 7: cosmos_notifier_grpc.SubscriptionService.ToggleChainSubscription:input_type -> cosmos_notifier_grpc.ToggleChainSubscriptionRequest
	7,  // 8: cosmos_notifier_grpc.SubscriptionService.ToggleContractSubscription:input_type -> cosmos_notifier_grpc.ToggleContractSubscriptionRequest
	9,  // 9: cosmos_notifier_grpc.SubscriptionService.AddDao:input_type -> cosmos_notifier_grpc.AddDaoRequest
	11, // 10: cosmos_notifier_grpc.SubscriptionService.DeleteDao:input_type -> cosmos_notifier_grpc.DeleteDaoRequest
	12, // 11: cosmos_notifier_grpc.SubscriptionService.EnableChain:input_type -> cosmos_notifier_grpc.EnableChainRequest
	5,  // 12: cosmos_notifier_grpc.SubscriptionService.GetSubscriptions:output_type -> cosmos_notifier_grpc.GetSubscriptionsResponse
	8,  // 13: cosmos_notifier_grpc.SubscriptionService.ToggleChainSubscription:output_type -> cosmos_notifier_grpc.ToggleSubscriptionResponse
	8,  // 14: cosmos_notifier_grpc.SubscriptionService.ToggleContractSubscription:output_type -> cosmos_notifier_grpc.ToggleSubscriptionResponse
	10, // 15: cosmos_notifier_grpc.SubscriptionService.AddDao:output_type -> cosmos_notifier_grpc.AddDaoResponse
	13, // 16: cosmos_notifier_grpc.SubscriptionService.DeleteDao:output_type -> google.protobuf.Empty
	13, // 17: cosmos_notifier_grpc.SubscriptionService.EnableChain:output_type -> google.protobuf.Empty
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_subscription_service_proto_init() }
func file_subscription_service_proto_init() {
	if File_subscription_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_subscription_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleChainSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleContractSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDaoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDaoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDaoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_subscription_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableChainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_subscription_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subscription_service_proto_goTypes,
		DependencyIndexes: file_subscription_service_proto_depIdxs,
		EnumInfos:         file_subscription_service_proto_enumTypes,
		MessageInfos:      file_subscription_service_proto_msgTypes,
	}.Build()
	File_subscription_service_proto = out.File
	file_subscription_service_proto_rawDesc = nil
	file_subscription_service_proto_goTypes = nil
	file_subscription_service_proto_depIdxs = nil
}
