// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: tracker_service.proto

package tracker_service

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	pbcommon "github.com/shifty11/cosmos-notifier/services/grpc/protobuf/pbcommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrackerChatRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Type:
	//	*TrackerChatRoom_Discord
	//	*TrackerChatRoom_Telegram
	Type isTrackerChatRoom_Type `protobuf_oneof:"type"`
}

func (x *TrackerChatRoom) Reset() {
	*x = TrackerChatRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackerChatRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackerChatRoom) ProtoMessage() {}

func (x *TrackerChatRoom) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackerChatRoom.ProtoReflect.Descriptor instead.
func (*TrackerChatRoom) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{0}
}

func (x *TrackerChatRoom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *TrackerChatRoom) GetType() isTrackerChatRoom_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TrackerChatRoom) GetDiscord() *pbcommon.DiscordType {
	if x, ok := x.GetType().(*TrackerChatRoom_Discord); ok {
		return x.Discord
	}
	return nil
}

func (x *TrackerChatRoom) GetTelegram() *pbcommon.TelegramType {
	if x, ok := x.GetType().(*TrackerChatRoom_Telegram); ok {
		return x.Telegram
	}
	return nil
}

type isTrackerChatRoom_Type interface {
	isTrackerChatRoom_Type()
}

type TrackerChatRoom_Discord struct {
	Discord *pbcommon.DiscordType `protobuf:"bytes,2,opt,name=discord,proto3,oneof"`
}

type TrackerChatRoom_Telegram struct {
	Telegram *pbcommon.TelegramType `protobuf:"bytes,3,opt,name=telegram,proto3,oneof"`
}

func (*TrackerChatRoom_Discord) isTrackerChatRoom_Type() {}

func (*TrackerChatRoom_Telegram) isTrackerChatRoom_Type() {}

type Tracker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	NotificationInterval *duration.Duration   `protobuf:"bytes,3,opt,name=notificationInterval,proto3" json:"notificationInterval,omitempty"`
	ChatRoom             *TrackerChatRoom     `protobuf:"bytes,4,opt,name=chatRoom,proto3" json:"chatRoom,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Tracker) Reset() {
	*x = Tracker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracker) ProtoMessage() {}

func (x *Tracker) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracker.ProtoReflect.Descriptor instead.
func (*Tracker) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{1}
}

func (x *Tracker) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tracker) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Tracker) GetNotificationInterval() *duration.Duration {
	if x != nil {
		return x.NotificationInterval
	}
	return nil
}

func (x *Tracker) GetChatRoom() *TrackerChatRoom {
	if x != nil {
		return x.ChatRoom
	}
	return nil
}

func (x *Tracker) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ChainName string `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{2}
}

func (x *Validator) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Validator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Validator) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

type ValidatorBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moniker    string       `protobuf:"bytes,1,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Validators []*Validator `protobuf:"bytes,2,rep,name=validators,proto3" json:"validators,omitempty"`
	IsTracked  bool         `protobuf:"varint,3,opt,name=is_tracked,json=isTracked,proto3" json:"is_tracked,omitempty"`
}

func (x *ValidatorBundle) Reset() {
	*x = ValidatorBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorBundle) ProtoMessage() {}

func (x *ValidatorBundle) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorBundle.ProtoReflect.Descriptor instead.
func (*ValidatorBundle) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{3}
}

func (x *ValidatorBundle) GetMoniker() string {
	if x != nil {
		return x.Moniker
	}
	return ""
}

func (x *ValidatorBundle) GetValidators() []*Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *ValidatorBundle) GetIsTracked() bool {
	if x != nil {
		return x.IsTracked
	}
	return false
}

type ListTrackersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trackers         []*Tracker         `protobuf:"bytes,1,rep,name=trackers,proto3" json:"trackers,omitempty"`
	ChatRooms        []*TrackerChatRoom `protobuf:"bytes,2,rep,name=chatRooms,proto3" json:"chatRooms,omitempty"`
	ValidatorBundles []*ValidatorBundle `protobuf:"bytes,3,rep,name=validator_bundles,json=validatorBundles,proto3" json:"validator_bundles,omitempty"`
}

func (x *ListTrackersResponse) Reset() {
	*x = ListTrackersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTrackersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTrackersResponse) ProtoMessage() {}

func (x *ListTrackersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTrackersResponse.ProtoReflect.Descriptor instead.
func (*ListTrackersResponse) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListTrackersResponse) GetTrackers() []*Tracker {
	if x != nil {
		return x.Trackers
	}
	return nil
}

func (x *ListTrackersResponse) GetChatRooms() []*TrackerChatRoom {
	if x != nil {
		return x.ChatRooms
	}
	return nil
}

func (x *ListTrackersResponse) GetValidatorBundles() []*ValidatorBundle {
	if x != nil {
		return x.ValidatorBundles
	}
	return nil
}

type IsAddressValidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsAddressValidRequest) Reset() {
	*x = IsAddressValidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAddressValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAddressValidRequest) ProtoMessage() {}

func (x *IsAddressValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAddressValidRequest.ProtoReflect.Descriptor instead.
func (*IsAddressValidRequest) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{5}
}

func (x *IsAddressValidRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IsAddressValidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
}

func (x *IsAddressValidResponse) Reset() {
	*x = IsAddressValidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAddressValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAddressValidResponse) ProtoMessage() {}

func (x *IsAddressValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAddressValidResponse.ProtoReflect.Descriptor instead.
func (*IsAddressValidResponse) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{6}
}

func (x *IsAddressValidResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type CreateTrackerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address              string             `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	NotificationInterval *duration.Duration `protobuf:"bytes,2,opt,name=notificationInterval,proto3" json:"notificationInterval,omitempty"`
	ChatRoom             *TrackerChatRoom   `protobuf:"bytes,3,opt,name=chatRoom,proto3" json:"chatRoom,omitempty"`
}

func (x *CreateTrackerRequest) Reset() {
	*x = CreateTrackerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrackerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrackerRequest) ProtoMessage() {}

func (x *CreateTrackerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrackerRequest.ProtoReflect.Descriptor instead.
func (*CreateTrackerRequest) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTrackerRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateTrackerRequest) GetNotificationInterval() *duration.Duration {
	if x != nil {
		return x.NotificationInterval
	}
	return nil
}

func (x *CreateTrackerRequest) GetChatRoom() *TrackerChatRoom {
	if x != nil {
		return x.ChatRoom
	}
	return nil
}

type UpdateTrackerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackerId            int64              `protobuf:"varint,1,opt,name=trackerId,proto3" json:"trackerId,omitempty"`
	NotificationInterval *duration.Duration `protobuf:"bytes,2,opt,name=notificationInterval,proto3" json:"notificationInterval,omitempty"`
	ChatRoom             *TrackerChatRoom   `protobuf:"bytes,3,opt,name=chatRoom,proto3" json:"chatRoom,omitempty"`
}

func (x *UpdateTrackerRequest) Reset() {
	*x = UpdateTrackerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrackerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrackerRequest) ProtoMessage() {}

func (x *UpdateTrackerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrackerRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrackerRequest) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTrackerRequest) GetTrackerId() int64 {
	if x != nil {
		return x.TrackerId
	}
	return 0
}

func (x *UpdateTrackerRequest) GetNotificationInterval() *duration.Duration {
	if x != nil {
		return x.NotificationInterval
	}
	return nil
}

func (x *UpdateTrackerRequest) GetChatRoom() *TrackerChatRoom {
	if x != nil {
		return x.ChatRoom
	}
	return nil
}

type DeleteTrackerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackerId int64 `protobuf:"varint,1,opt,name=trackerId,proto3" json:"trackerId,omitempty"`
}

func (x *DeleteTrackerRequest) Reset() {
	*x = DeleteTrackerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTrackerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrackerRequest) ProtoMessage() {}

func (x *DeleteTrackerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrackerRequest.ProtoReflect.Descriptor instead.
func (*DeleteTrackerRequest) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTrackerRequest) GetTrackerId() int64 {
	if x != nil {
		return x.TrackerId
	}
	return 0
}

type TrackValidatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monikers             []string           `protobuf:"bytes,1,rep,name=monikers,proto3" json:"monikers,omitempty"`
	NotificationInterval *duration.Duration `protobuf:"bytes,2,opt,name=notificationInterval,proto3" json:"notificationInterval,omitempty"`
	ChatRoom             *TrackerChatRoom   `protobuf:"bytes,3,opt,name=chatRoom,proto3" json:"chatRoom,omitempty"`
}

func (x *TrackValidatorsRequest) Reset() {
	*x = TrackValidatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackValidatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackValidatorsRequest) ProtoMessage() {}

func (x *TrackValidatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackValidatorsRequest.ProtoReflect.Descriptor instead.
func (*TrackValidatorsRequest) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{10}
}

func (x *TrackValidatorsRequest) GetMonikers() []string {
	if x != nil {
		return x.Monikers
	}
	return nil
}

func (x *TrackValidatorsRequest) GetNotificationInterval() *duration.Duration {
	if x != nil {
		return x.NotificationInterval
	}
	return nil
}

func (x *TrackValidatorsRequest) GetChatRoom() *TrackerChatRoom {
	if x != nil {
		return x.ChatRoom
	}
	return nil
}

type TrackValidatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddedTrackers     []*Tracker `protobuf:"bytes,1,rep,name=addedTrackers,proto3" json:"addedTrackers,omitempty"`
	DeletedTrackerIds []int64    `protobuf:"varint,2,rep,packed,name=deletedTrackerIds,proto3" json:"deletedTrackerIds,omitempty"`
}

func (x *TrackValidatorsResponse) Reset() {
	*x = TrackValidatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tracker_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackValidatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackValidatorsResponse) ProtoMessage() {}

func (x *TrackValidatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tracker_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackValidatorsResponse.ProtoReflect.Descriptor instead.
func (*TrackValidatorsResponse) Descriptor() ([]byte, []int) {
	return file_tracker_service_proto_rawDescGZIP(), []int{11}
}

func (x *TrackValidatorsResponse) GetAddedTrackers() []*Tracker {
	if x != nil {
		return x.AddedTrackers
	}
	return nil
}

func (x *TrackValidatorsResponse) GetDeletedTrackerIds() []int64 {
	if x != nil {
		return x.DeletedTrackerIds
	}
	return nil
}

var File_tracker_service_proto protoreflect.FileDescriptor

var file_tracker_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x70, 0x62, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xff, 0x01, 0x0a,
	0x07, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x4d, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54,
	0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x10, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22,
	0x31, 0x0a, 0x15, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4d, 0x0a, 0x14, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0xc6, 0x01, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x4d, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x34, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72,
	0x73, 0x12, 0x4d, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x41, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x22, 0x8c, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x32, 0xda, 0x04, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x49,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x2b, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x79, 0x31, 0x31, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tracker_service_proto_rawDescOnce sync.Once
	file_tracker_service_proto_rawDescData = file_tracker_service_proto_rawDesc
)

func file_tracker_service_proto_rawDescGZIP() []byte {
	file_tracker_service_proto_rawDescOnce.Do(func() {
		file_tracker_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tracker_service_proto_rawDescData)
	})
	return file_tracker_service_proto_rawDescData
}

var file_tracker_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tracker_service_proto_goTypes = []interface{}{
	(*TrackerChatRoom)(nil),         // 0: cosmos_notifier_grpc.TrackerChatRoom
	(*Tracker)(nil),                 // 1: cosmos_notifier_grpc.Tracker
	(*Validator)(nil),               // 2: cosmos_notifier_grpc.Validator
	(*ValidatorBundle)(nil),         // 3: cosmos_notifier_grpc.ValidatorBundle
	(*ListTrackersResponse)(nil),    // 4: cosmos_notifier_grpc.ListTrackersResponse
	(*IsAddressValidRequest)(nil),   // 5: cosmos_notifier_grpc.IsAddressValidRequest
	(*IsAddressValidResponse)(nil),  // 6: cosmos_notifier_grpc.IsAddressValidResponse
	(*CreateTrackerRequest)(nil),    // 7: cosmos_notifier_grpc.CreateTrackerRequest
	(*UpdateTrackerRequest)(nil),    // 8: cosmos_notifier_grpc.UpdateTrackerRequest
	(*DeleteTrackerRequest)(nil),    // 9: cosmos_notifier_grpc.DeleteTrackerRequest
	(*TrackValidatorsRequest)(nil),  // 10: cosmos_notifier_grpc.TrackValidatorsRequest
	(*TrackValidatorsResponse)(nil), // 11: cosmos_notifier_grpc.TrackValidatorsResponse
	(*pbcommon.DiscordType)(nil),    // 12: cosmos_notifier_grpc.DiscordType
	(*pbcommon.TelegramType)(nil),   // 13: cosmos_notifier_grpc.TelegramType
	(*duration.Duration)(nil),       // 14: google.protobuf.Duration
	(*timestamp.Timestamp)(nil),     // 15: google.protobuf.Timestamp
	(*empty.Empty)(nil),             // 16: google.protobuf.Empty
}
var file_tracker_service_proto_depIdxs = []int32{
	12, // 0: cosmos_notifier_grpc.TrackerChatRoom.discord:type_name -> cosmos_notifier_grpc.DiscordType
	13, // 1: cosmos_notifier_grpc.TrackerChatRoom.telegram:type_name -> cosmos_notifier_grpc.TelegramType
	14, // 2: cosmos_notifier_grpc.Tracker.notificationInterval:type_name -> google.protobuf.Duration
	0,  // 3: cosmos_notifier_grpc.Tracker.chatRoom:type_name -> cosmos_notifier_grpc.TrackerChatRoom
	15, // 4: cosmos_notifier_grpc.Tracker.updatedAt:type_name -> google.protobuf.Timestamp
	2,  // 5: cosmos_notifier_grpc.ValidatorBundle.validators:type_name -> cosmos_notifier_grpc.Validator
	1,  // 6: cosmos_notifier_grpc.ListTrackersResponse.trackers:type_name -> cosmos_notifier_grpc.Tracker
	0,  // 7: cosmos_notifier_grpc.ListTrackersResponse.chatRooms:type_name -> cosmos_notifier_grpc.TrackerChatRoom
	3,  // 8: cosmos_notifier_grpc.ListTrackersResponse.validator_bundles:type_name -> cosmos_notifier_grpc.ValidatorBundle
	14, // 9: cosmos_notifier_grpc.CreateTrackerRequest.notificationInterval:type_name -> google.protobuf.Duration
	0,  // 10: cosmos_notifier_grpc.CreateTrackerRequest.chatRoom:type_name -> cosmos_notifier_grpc.TrackerChatRoom
	14, // 11: cosmos_notifier_grpc.UpdateTrackerRequest.notificationInterval:type_name -> google.protobuf.Duration
	0,  // 12: cosmos_notifier_grpc.UpdateTrackerRequest.chatRoom:type_name -> cosmos_notifier_grpc.TrackerChatRoom
	14, // 13: cosmos_notifier_grpc.TrackValidatorsRequest.notificationInterval:type_name -> google.protobuf.Duration
	0,  // 14: cosmos_notifier_grpc.TrackValidatorsRequest.chatRoom:type_name -> cosmos_notifier_grpc.TrackerChatRoom
	1,  // 15: cosmos_notifier_grpc.TrackValidatorsResponse.addedTrackers:type_name -> cosmos_notifier_grpc.Tracker
	16, // 16: cosmos_notifier_grpc.TrackerService.ListTrackers:input_type -> google.protobuf.Empty
	5,  // 17: cosmos_notifier_grpc.TrackerService.IsAddressValid:input_type -> cosmos_notifier_grpc.IsAddressValidRequest
	7,  // 18: cosmos_notifier_grpc.TrackerService.CreateTracker:input_type -> cosmos_notifier_grpc.CreateTrackerRequest
	8,  // 19: cosmos_notifier_grpc.TrackerService.UpdateTracker:input_type -> cosmos_notifier_grpc.UpdateTrackerRequest
	9,  // 20: cosmos_notifier_grpc.TrackerService.DeleteTracker:input_type -> cosmos_notifier_grpc.DeleteTrackerRequest
	10, // 21: cosmos_notifier_grpc.TrackerService.TrackValidators:input_type -> cosmos_notifier_grpc.TrackValidatorsRequest
	4,  // 22: cosmos_notifier_grpc.TrackerService.ListTrackers:output_type -> cosmos_notifier_grpc.ListTrackersResponse
	6,  // 23: cosmos_notifier_grpc.TrackerService.IsAddressValid:output_type -> cosmos_notifier_grpc.IsAddressValidResponse
	1,  // 24: cosmos_notifier_grpc.TrackerService.CreateTracker:output_type -> cosmos_notifier_grpc.Tracker
	1,  // 25: cosmos_notifier_grpc.TrackerService.UpdateTracker:output_type -> cosmos_notifier_grpc.Tracker
	16, // 26: cosmos_notifier_grpc.TrackerService.DeleteTracker:output_type -> google.protobuf.Empty
	11, // 27: cosmos_notifier_grpc.TrackerService.TrackValidators:output_type -> cosmos_notifier_grpc.TrackValidatorsResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_tracker_service_proto_init() }
func file_tracker_service_proto_init() {
	if File_tracker_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tracker_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackerChatRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tracker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTrackersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAddressValidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAddressValidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrackerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrackerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTrackerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackValidatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tracker_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackValidatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tracker_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TrackerChatRoom_Discord)(nil),
		(*TrackerChatRoom_Telegram)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tracker_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tracker_service_proto_goTypes,
		DependencyIndexes: file_tracker_service_proto_depIdxs,
		MessageInfos:      file_tracker_service_proto_msgTypes,
	}.Build()
	File_tracker_service_proto = out.File
	file_tracker_service_proto_rawDesc = nil
	file_tracker_service_proto_goTypes = nil
	file_tracker_service_proto_depIdxs = nil
}
