syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "pbcommon.proto";

package cosmos_notifier_grpc;

option go_package = "github.com/shifty11/cosmos-notifier/services/grpc/protobuf/tracker_service";

service TrackerService {
  rpc ListTrackers (google.protobuf.Empty) returns (ListTrackersResponse) {}
  rpc IsAddressValid (IsAddressValidRequest) returns (IsAddressValidResponse) {}
  rpc CreateTracker (CreateTrackerRequest) returns (Tracker) {}
  rpc UpdateTracker (UpdateTrackerRequest) returns (Tracker) {}
  rpc DeleteTracker (DeleteTrackerRequest) returns (google.protobuf.Empty) {}
  rpc TrackValidators (TrackValidatorsRequest) returns (TrackValidatorsResponse) {}
}

message TrackerChatRoom {
  string name = 1;
  oneof type {
    DiscordType discord = 2;
    TelegramType telegram = 3;
  }
}

message Tracker {
  int64 id = 1;
  string address = 2;
  google.protobuf.Duration notificationInterval = 3;
  TrackerChatRoom chatRoom = 4;
  google.protobuf.Timestamp updatedAt = 5;
  string validatorMoniker = 6;
}

message Validator {
  int64 id = 1;
  string address = 2;
  string chain_name = 3;
}

message ValidatorBundle {
  string moniker = 1;
  repeated Validator validators = 2;
  bool is_tracked = 3;
}

message ListTrackersResponse {
  repeated Tracker trackers = 1;
  repeated TrackerChatRoom chatRooms = 2;
  repeated ValidatorBundle validator_bundles = 3;
}

message IsAddressValidRequest {
  string address = 1;
}

message IsAddressValidResponse {
  bool isValid = 1;
}

message CreateTrackerRequest {
  string address = 1;
  google.protobuf.Duration notificationInterval = 2;
  TrackerChatRoom chatRoom = 3;
}

message UpdateTrackerRequest {
  int64 trackerId = 1;
  google.protobuf.Duration notificationInterval = 2;
  TrackerChatRoom chatRoom = 3;
}

message DeleteTrackerRequest {
  int64 trackerId = 1;
}

message TrackValidatorsRequest {
  repeated string monikers = 1;
  google.protobuf.Duration notificationInterval = 2;
  TrackerChatRoom chatRoom = 3;
}

message TrackValidatorsResponse {
  repeated Tracker addedTrackers = 1;
  repeated int64 deletedTrackerIds = 2;
}